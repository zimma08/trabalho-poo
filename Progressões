
public abstract class Progressao {
    protected int atual;

    public Progressao(int inicio) {
        this.atual = inicio;
    }

    public abstract int proximo();

    public void reiniciar() {
        atual = primeiro();
    }

    protected abstract int primeiro();
}


public class ProgressaoAritmetica extends Progressao {
    private int razao;

    public ProgressaoAritmetica(int inicio, int razao) {
        super(inicio);
        this.razao = razao;
    }

    public int proximo() {
        int proximo = atual;
        atual += razao;
        return proximo;
    }

    protected int primeiro() {
        return 0;
    }
}


public class ProgressaoGeometrica extends Progressao {
    private int razao;

    public ProgressaoGeometrica(int inicio, int razao) {
        super(inicio);
        this.razao = razao;
    }

    public int proximo() {
        int proximo = atual;
        atual *= razao;
        return proximo;
    }

    protected int primeiro() {
        return 1;
    }
}


public class ProgressaoFibonacci extends Progressao {
    private int anterior;
    private int penultimo;

    public ProgressaoFibonacci() {
        super(0);
        anterior = 0;
        penultimo = 1;
    }

    public int proximo() {
        int proximo = anterior + penultimo;
        penultimo = anterior;
        anterior = proximo;
        atual = proximo;
        return proximo;
    }

    protected int primeiro() {
        return 0;
    }
}
